---

- name: Create a EC2 instance
  hosts: localhost
  connection: local
  become: false
  gather_facts: false

  tasks:

    - name: Launch a new EC2 instances from image
      ec2:
        key_name: "{{ keypair }}"
        group_id: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        ebs_optimized: true
        assign_public_ip: false
        image: "{{ ami_id }}"
        region: "{{ region }}"
        wait: true
        count: 1
        state: present
        instance_tags:
          Name: "{{ instance_name }}.wp-nginx-new"
          role: launched
        user_data: |
          #!/bin/bash
          apt-get update
          apt-get install -y python-simplejson
      register: ec2

    #- debug:
    #  var: ec2.instances

    #- name: Allocate a new elastic IP and associate it with the instance
    #  ec2_eip:
    #    device_id: "{{ item.device_id }}"
    #  with_items: "{{ ec2.instances }}"

    - name: Add instance public IP to host group
      add_host:
        hostname={{ item.public_ip }}
        groupname=launched
      with_items: "{{ ec2.instances }}"

    - name: Add the newly created EC2 instance(s) to the host group
      become: true
      lineinfile:
        dest: "{{ launched_inventory }}"
        regexp: "^launched ansible_host="
        line: "launched ansible_host={{ item.public_ip }}"
      with_items: "{{ ec2.instances }}"

    #- debug:
    #    var: groups

    - name: Add route53 A-record for the instance
      route53:
        command: create
        zone: "{{ route53_domain }}"
        record: "{{ instance_name }}.{{ route53_domain }}"
        type: A
        ttl: 300
        value: "{{ item.public_ip }}"
        wait: true
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to go online
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

    - name: Wait for cloud init on first boot
      pause: minutes=2
      when: ec2|changed

    - name: Print SSH Config
      debug:
        msg: [
          "Host {{ instance_name }}",
          "Hostname {{ item.public_ip }}",
          "User ubuntu",
          "IdentityFile ~/.ssh/lauder.pem"]
      with_items: "{{ ec2.instances }}"




